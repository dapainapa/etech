{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Perlerada\\\\Desktop\\\\sludinajumi_project\\\\client\\\\src\\\\Sensor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport useStyles from './styles';\nimport memories from './images/memories.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gitHubUrl = \"https://api.thingspeak.com/channels/1481991/status.json?api_key=A80QELDUFKQYY5GN\";\n\nfunction App() {\n  _s();\n\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    getGitHubUserWithFetch();\n  }, []);\n\n  const getGitHubUserWithFetch = async () => {\n    const response = await fetch(gitHubUrl);\n    const jsonData = await response.json();\n    setUserData(jsonData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        children: [userData.channel.name, \" \", userData.channel.latitude, \" \", userData.channel.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LXAOzhxTy9nW1apql5Pcq7dSgFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Perlerada/Desktop/sludinajumi_project/client/src/Sensor.js"],"names":["React","useState","useEffect","Container","AppBar","Typography","Grow","Grid","useStyles","memories","gitHubUrl","App","userData","setUserData","getGitHubUserWithFetch","response","fetch","jsonData","json","channel","name","latitude","longitude"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8CC,IAA9C,QAA0D,mBAA1D;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,SAAS,GAAG,kFAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,sBAAsB;AACvB,GAFQ,EAEN,EAFM,CAAT;;AAIE,QAAMA,sBAAsB,GAAG,YAAY;AAC3C,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,SAAD,CAA5B;AACA,UAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAL,IAAAA,WAAW,CAACI,QAAD,CAAX;AACD,GAJC;;AAKF,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA,2BACE,QAAC,MAAD;AAAS,MAAA,QAAQ,EAAC,QAAlB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,QAA/B;AAAA,mBAAyCL,QAAQ,CAACO,OAAT,CAAiBC,IAA1D,OAAiER,QAAQ,CAACO,OAAT,CAAiBE,QAAlF,OAA6FT,QAAQ,CAACO,OAAT,CAAiBG,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnBQX,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport memories from './images/memories.png';\r\n\r\nconst gitHubUrl = \"https://api.thingspeak.com/channels/1481991/status.json?api_key=A80QELDUFKQYY5GN\";\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getGitHubUserWithFetch();\r\n  }, []);\r\n\r\n    const getGitHubUserWithFetch = async () => {\r\n    const response = await fetch(gitHubUrl);\r\n    const jsonData = await response.json();\r\n    setUserData(jsonData);\r\n  };\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <AppBar  position=\"static\" color=\"inherit\">\r\n        <Typography variant=\"h4\" align=\"center\">{userData.channel.name} {userData.channel.latitude} {userData.channel.longitude}</Typography>\r\n      </AppBar>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}