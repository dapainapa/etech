{"ast":null,"code":"import { FETCH_ALL, FETCH_SENSOR, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case FETCH_SENSOR:\n      return action.payload;\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["C:/Users/Perlerada/Desktop/sludinajumi_project/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_SENSOR","CREATE","UPDATE","DELETE","LIKE","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,MAAlC,EAA0CC,MAA1C,EAAkDC,MAAlD,EAA0DC,IAA1D,QAAsE,0BAAtE;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,aAAOO,MAAM,CAACE,OAAd;;AACF,SAAKR,YAAL;AACI,aAAOM,MAAM,CAACE,OAAd;;AACJ,SAAKJ,IAAL;AACE,aAAOC,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACF,SAAKT,MAAL;AACE,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKN,MAAL;AACE,aAAOG,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOE,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACF;AACE,aAAOH,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["import { FETCH_ALL, FETCH_SENSOR, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case FETCH_SENSOR:\r\n        return action.payload;\r\n    case LIKE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    case UPDATE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}